#! /bin/sh /usr/share/dpatch/dpatch-run
## makefile.dpatch by Samuel Mimram <smimram@debian.org>
##
## All lines beginning with `## DP:' are a description of the patch.
## DP: Allow compilation on non-native archs.

@DPATCH@
diff -urNad menhir-20060412~/Makefile menhir-20060412/Makefile
--- menhir-20060412~/Makefile	2006-04-19 19:28:11.000000000 +0000
+++ menhir-20060412/Makefile	2006-04-19 19:28:11.000000000 +0000
@@ -52,6 +52,7 @@
 libdir	        := ${PREFIX}/share/$(EXECUTABLE)
 DOCS            := manual.pdf demos
 LIBS            := standard.mly
+BEST		:= opt
 
 # ----------------------------------------------------------------------------
 # Common compilation rules.
@@ -93,7 +94,7 @@
 # Checking the version of the ocaml compiler.
 
 versioncheck:
-	@ echo Checking that $(CAMLOPT) is recent enough...
-	@ $(CAMLOPT) str.cmxa check-ocaml-version.ml -o check-ocaml-version
+	@ echo Checking that $(CAMLC) is recent enough...
+	@ $(CAMLC) str.cma check-ocaml-version.ml -o check-ocaml-version
 	@ ./check-ocaml-version --verbose --gt "3.09"
 
diff -urNad menhir-20060412~/Makefile.common menhir-20060412/Makefile.common
--- menhir-20060412~/Makefile.common	2006-04-19 19:28:11.000000000 +0000
+++ menhir-20060412/Makefile.common	2006-04-19 19:29:37.000000000 +0000
@@ -50,8 +50,8 @@
    grammar item lr0 lr1 lr1partial derivation conflict			\
    invariant code traverse inliner back
 
-OBJECTS      := $(MODULES:=.cmo)
-XBJECTS      := $(MODULES:=.cmx)
+CM           := $(shell if [ $(BEST) = opt ]; then echo cmx; else echo cmo; fi)
+OBJECTS      := $(MODULES:=.$(CM))
 
 # -------------------------------------------------------------------------
 
@@ -97,11 +97,12 @@
 
 executables: $(EXECUTABLE)
 
-$(EXECUTABLE): $(XBJECTS)
-	$(CAMLOPT) -o $(EXECUTABLE) $(LNKOFLAGS) $(XBJECTS)
-
-$(EXECUTABLE).byte: $(OBJECTS)
-	$(CAMLC) -o $(EXECUTABLE).byte $(LNKBFLAGS) $(OBJECTS)
+$(EXECUTABLE): $(OBJECTS)
+	if [ $(BEST) = opt ] ; then \
+		$(CAMLOPT) -o $(EXECUTABLE) $(LNKOFLAGS) $(OBJECTS); \
+	else \
+		$(CAMLC) -o $(EXECUTABLE) $(LNKBFLAGS) $(OBJECTS); \
+	fi
 
 # -------------------------------------------------------------------------
 
